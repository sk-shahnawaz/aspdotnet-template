version: '3.7'
services:
 aspdotnet_template:
  container_name: web-api
  build:
   context: .
   dockerfile: Dockerfile
   args:
    NEW_RELIC_LICENSE_KEY: add_new_relic_license_key
    NEW_RELIC_APP_NAME: 'ASP.NET Template Application (Docker)'
  networks:
    - appnetwork
  ports:
   - "8585:80"
   - "8586:443"
  environment:
   ENV: dev
   ASPNETCORE_ENVIRONMENT: Production
   USE_IN_MEMORY_DATABASE: "false"
   IN_MEMORY_DATABASE_NAME: AppDemoDb
   USE_POSTGRESQL_DB: "true"
   USE_SQLSERVER_DB: "false"
   ENABLE_ODATA: "true"
   PGHOST: postgres-db
   PGPORT: 5432
   PGPASSWORD: postgres
   PGUSER: postgres
   PGDATABASE: test-db-postgres
   PGVERSION: 13.3
   SERILOG_LOGGING_LEVEL: information
   SENTRY_ENVIRONMENT: local-docker
  depends_on:
   - 'postgres' 
 db_migration:
  container_name: db-migration
  build:
   context: /.
   dockerfile: ./NET-Core.Console.DB.PostgreSQL/Dockerfile
  networks:
    - appnetwork
  environment:
   ENV: dev
   ASPNETCORE_ENVIRONMENT: Production
   USE_IN_MEMORY_DATABASE: "false"
   IN_MEMORY_DATABASE_NAME: AppDemoDb
   PGHOST: postgres-db
   PGPORT: 5432
   PGPASSWORD: postgres
   PGUSER: postgres
   PGDATABASE: test-db-postgres
   PGVERSION: 13.3
   SERILOG_LOGGING_LEVEL: information
   SENTRY_ENVIRONMENT: local-docker
  depends_on:
   - 'postgres'  
 postgres:
    container_name: postgres-db
    image: 'postgres:latest'
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test-db-postgres
    ports:
      - "8587:5432"
    networks:
      - appnetwork
    volumes:
      - appdata:/var/lib/aspdotnet_template/postgres
      
volumes:
  appdata:
networks:
  appnetwork:
   driver: bridge